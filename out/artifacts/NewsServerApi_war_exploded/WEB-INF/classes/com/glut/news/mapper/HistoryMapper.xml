<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


 <!-- 名字空间,mybatis高版本后namespace属性是必须的，其作用用来区分每个SQL映射文件中的语句, 也就说在一个项目里可能会在不同的SQL 
	映射文件中存在相同的语句ID
	
	column不做限制，可以为任意表的字段，而property须为type 定义的pojo属性
<resultMap id="唯一的标识" type="映射的pojo对象">
  <id column="表的主键字段，或者可以为查询语句中的别名字段" jdbcType="字段类型" property="映射pojo对象的主键属性" />
  <result column="表的一个字段（可以为任意表的一个字段）" jdbcType="字段类型" property="映射到pojo对象的一个属性（须为type定义的pojo对象中的一个属性）"/>
  <association property="pojo的一个对象属性" javaType="pojo关联的pojo对象">
    <id column="关联pojo对象对应表的主键字段" jdbcType="字段类型" property="关联pojo对象的主席属性"/>
    <result  column="任意表的字段" jdbcType="字段类型" property="关联pojo对象的属性"/>
  </association>
  集合中的property须为oftype定义的pojo对象的属性
  <collection property="pojo的集合属性" ofType="集合中的pojo对象">
    <id column="集合中pojo对象对应的表的主键字段" jdbcType="字段类型" property="集合中pojo对象的主键属性" />
    <result column="可以为任意表的字段" jdbcType="字段类型" property="集合中的pojo对象的属性" />  
  </collection>
</resultMap>

	 -->
	
	<mapper namespace="com.glut.news.mapper.HistoryMapper">
	<resultMap type="history" id="baseResultMap" >
		<id column="History_Id" property="History_Id" />
		<result column="History_Article" property="History_Article" />
		<result column="History_Persion" property="History_Persion" />
		<result column="History_Time" property="History_Time" />
 				<result column="History_Type" property="History_Type" />
		
<discriminator javaType="int" column="History_Type">
        <case value="1" resultMap="com.glut.news.mapper.ArticleMapper.baseResultMap"></case>
        <case value="2" resultMap="com.glut.news.mapper.VideoMapper.baseResultMap">
   


       
        </case>
    </discriminator>
	
	</resultMap>
	

	
		<!-- 模糊查询不同分类的文章列表 -->
	<sql id="whereSelective">
		<where>
			<if test="queryObject.Article_Type != null and queryObject.Article_Type.trim().length>0">
				<bind name="pattern" value="'%' + queryObject.Article_Type + '%'"/>
				Article_Type like #{pattern}
			</if>
		</where>
	</sql>
	
	<select id="selectById" parameterType="history" resultMap="baseResultMap">
	select * from History where History_Id=#{History_Id}
	</select>
	<select id="selectedHistoryByUserIdWithContentId" parameterType="history" resultType="int">
	select count(*) from History where  History_Article=#{History_Article} and History_Persion=#{History_Persion}
	</select>
	
	<select id="selectVideoByUserId" parameterType="page" resultMap="baseResultMap">
		<!-- select * from (
			select a.*,rownum rn from(
				select * from (select * from History where History_Persion=#{queryObject.History_Persion} ORDER BY History_Id desc)  h ,Video v where h.History_Article=v.Video_Id 
			) a where <![CDATA[rownum<=#{lastIndex}]]>
		)  where rn>=#{firstIndex}  -->
		select * from (select * from History  where  History_Persion=#{queryObject.History_Persion} and HISTORY_TYPE=2   ORDER BY History_Id desc limit #{startRow},#{averPageSize}) h,Video v where h.History_Article=v.Video_Id
	
	</select>
	
	<select id="selectArticleByUserId" parameterType="page" resultMap="baseResultMap">
		<!-- select * from (
			select a.*,rownum rn from(
				select * from (select * from History where History_Persion=#{queryObject.History_Persion} ORDER BY History_Id desc) h ,Article a where h.History_Article=a.Article_Id
			) a where <![CDATA[rownum<=#{lastIndex}]]>
		)  where rn>=#{firstIndex}  -->
			select * from ( select * from History  where   History_Persion=#{queryObject.History_Persion} and HISTORY_TYPE=1 ORDER BY History_Id desc limit #{startRow},#{averPageSize}) h,Article a where h.History_Article=a.Article_Id
	
	</select>
	
	
<select id="selectTatolByUserId" parameterType="int" resultType="int">
select count(*) from History where History_Persion=#{userId}
</select>
	<sql id="insert_columns">
	<trim prefix="(" suffix=")" suffixOverrides=",">
	History_Id,
	<if test="History_Article!=null">History_Article,</if>
	<if test="History_Persion!=null">History_Persion,</if>
	<if test="History_Time!=null">History_Time,</if>
	<if test="History_Type!=null">History_Type</if>
	
	</trim>
	</sql>
	<sql id="insert_values" >
	<trim prefix="values(" suffix=")" suffixOverrides=",">
	
	<if test="History_Id!=null">#{History_Id},</if>
	<if test="History_Article!=null">#{History_Article},</if>
	<if test="History_Persion!=null">#{History_Persion},</if>
	<if test="History_Time!=null">#{History_Time},</if>
	<if test="History_Type!=null">#{History_Type}</if>
	
	</trim>
	</sql>
	<insert id="insertHistory" parameterType="history">
	insert  ignore into History <include refid="insert_columns"/> <include refid="insert_values"/>
	</insert>
	
	
	

	</mapper>